1) C Program to Print Prime Numbers From 1 to N 

#include<stdio.h>
int main()
{
    int num,i,count,n;
    printf("Enter max range: ");
    scanf("%d",&n);
    for(num = 1;num<=n;num++){
         count = 0;
         for(i=2;i<=num/2;i++){
             if(num%i==0){
                 count++;
                 break;
             }
        }   
         if(count==0 && num!= 1)
             printf("%d ",num);
    }
   return 0;
}

2) C Program to Check Whether a Number is Positive, Negative, or Zero

#include <stdio.h>
int main()
{
	int A;
	printf("Enter the number A: ");
	scanf("%d", &A);
	if (A > 0)
		printf("%d is positive.", A);
	else if (A < 0)
		printf("%d is negative.", A);
	else if (A == 0)
		printf("%d is zero.", A);
	return 0;
}

3) C Program to Print Alphabets From A to Z Using Loop

#include <stdio.h>
int main()
{
	int i;
	printf("Alphabets from (A-Z) are:\n");
	for (i = 65; i <= 90; i++) {
		printf("%c ", i);
	}
	printf("\nAlphabets from (a-z) are:\n");
	for (i = 97; i <= 122; i++) {
		printf("%c ", i);
	}
	return 0;
}

4) C Program to Make a Simple Calculator

#include <stdio.h>
#include <stdlib.h>
int main()
{
	char ch;
	double a, b;
	while (1) {
		printf("Enter an operator (+, -, *, /), if want to exit press x: ");
		scanf(" %c", &ch);
		if (ch == 'x')
			exit(0);
		printf("Enter two first and second operand: ");
		scanf("%lf %lf",&a,&b);
		switch (ch) {
		case '+':
			printf("%.1lf + %.1lf = %.1lf\n", a, b, a + b);
			break;
		case '-':
			printf("%.1lf - %.1lf = %.1lf\n", a, b, a - b);
			break;
		case '*':
			printf("%.1lf * %.1lf = %.1lf\n", a, b, a * b);
			break;
		case '/':
			printf("%.1lf / %.1lf = %.1lf\n", a, b, a / b);
			break;
		default:
			printf("Error! please write a valid operator\n");
		}
	}
}

5) C Program to Generate Multiplication Table

#include <stdio.h>
void print_table(int range, int num)
{
	int row, col;row = range;
	col = 3;
	int arr[row][col];
	for (int k = 0; k < row; k++) {
		arr[k][0] = num;
		arr[k][1] = k + 1;
		arr[k][2] = arr[k][1] * arr[k][0];
	}
	for (int i = 0; i < row; i++) {
		printf("%d * %d = %d", arr[i][0], arr[i][1],
			arr[i][2]);
		printf("\n");
	}
}
int main()
{
	int range = 10;
	int num = 5;
	print_table(range, num);
	return 0;
}

6) C Program To Reverse a Number

#include <stdio.h>
int reverseDigits(int num)
{
	int rev_num = 0;
	while (num > 0)
	{
		rev_num = rev_num * 10 + num % 10;
		num = num / 10;
	}
	return rev_num;
}
int main()
{
	int num = 4562;
	printf("Reverse of no. is %d",
			reverseDigits(num));
	getchar();
	return 0;
}

7) C Program to Check Whether a Number is a Palindrome or Not 

#include <stdio.h>
int main()
{
	int original_number = 12321;
	int reversed = 0;
	int num = original_number;
	while (num != 0)
	{
		int r = num % 10;
		reversed = reversed * 10 + r;
		num /= 10;
	}
	if (original_number == reversed)
	{
		printf(" Given number %d is a palindrome number",
				original_number);
	}
	else
	{
		printf(" Given number %d is not a palindrome number",
				original_number);
	}
	return 0;
}

8) C Program to Find the Sum of Fibonacci Numbers at Even Indexes up to N Terms

#include <stdio.h>
int calculateEvenSum(int n)
{
	if (n <= 0)
		return 0;
	int fibo[2 * n + 1];
	fibo[0] = 0, fibo[1] = 1;
	int sum = 0;
	for (int i = 2; i <= 2 * n; i++) {
		fibo[i] = fibo[i - 1] + fibo[i - 2];
		if (i % 2 == 0)
			sum += fibo[i];
	}
	return sum;
}
int main()
{
	int n = 5;
	int sum = calculateEvenSum(n);
	printf("Even indexed Fibonacci Sum upto %d terms = %d",
		n, sum);
	return 0;
}

9) 